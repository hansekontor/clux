/**
 * This file is part of the BlockLotto core functionality.
 * 
 * DO NOT EDIT THIS FILE DIRECTLY.
 * Any changes to this file may cause unexpected behavior.
 * Please consult the project maintainers before making modifications.
*/

import React, { createContext, useContext, useEffect } from 'react';

// core components
import { useApp } from '@core/context/App';
import { useCashTab } from '@core/context/CashTab';

export const SelectContext = createContext();

export function SelectProvider({ children }) {
    const { wallet } = useCashTab();
    const { setLoadingStatus, user } = useApp();

    console.log("wif", wallet.Path1899.fundingWif);

    // manually turn off loading after error redirects...
    // check if this interferes with initial wallet loading 
    useEffect(async () => {
        setLoadingStatus(false);
    });

    const geoTicketAccess = user.ipGeo.ticketPurchase;

    return (
        <SelectContext.Provider value={{
            geoTicketAccess,
        }}>
            {children}
        </SelectContext.Provider>
    )
}

export const useSelect = () => {
    const context = useContext(SelectContext);
    if (!context) {
        throw new Error("useSelect must be used within a SelectProvider");
    }
    return context;
};